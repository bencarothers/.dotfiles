set nocompatible
filetype off
"
" =============== Vundle Initialization ===============

set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()
  if filereadable(expand("~/.vimrc.bundles"))
    source ~/.vimrc.bundles
  endif
call vundle#end()

filetype plugin indent on 

" ================ General Config ====================

set number                     " Line numbers are good
set backspace=indent,eol,start " Allow backspace in insert mode
set history=1000               " Store lots of :cmdline history
set showcmd                    " Show incomplete cmds down the bottom
set showmode                   " Show current mode down the bottom
set gcr=a:blinkon0             " Disable cursor blink
set visualbell                 " No sounds
set autoread                   " Reload files changed outside vim
set ttyfast                    " Improves redrawing"
set lazyredraw                 " don't redraw when don't have to"
set hidden                     " allows unwritten changes to a file
set splitbelow                 " natural split settings
set splitright
set incsearch                  " do incremental searching
set hlsearch                   " highlight matches
set laststatus=2               " Always display the status line
set autowrite                  " Automatically :write before running commands
syntax on

cmap w!! w !sudo tee % >/dev/null         " w!! to write a file as sudo"

" ============= Appearance ===============

" Airline
let g:airline_powerline_fonts = 1
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

let g:airline_symbols.space = "\ua0"
let g:airline_theme='solarized'
set t_Co=256

:set smartcase
:set ignorecase
:set noantialias

" Color scheme
colorscheme solarized
set background=dark
set encoding=utf-8

set list listchars=tab:»·,trail:·" Display extra whitespace"

" Highlight line number of where cursor currently is
hi CursorLineNr guifg=#050505

" ==================Leader Mappings==================

map <Space> <leader>
map <Leader>w :update<CR>
map <Leader>q :qall<CR>
map <Leader>gs :Gstatus<CR>
map <Leader>gc :Gcommit<CR>
map <Leader>gp :Gpush<CR>
"key to insert mode with paste using F2 key
map <Leader>i :set paste<CR>i
"Leave paste mode on exit
au InsertLeave * set nopaste

" ================ Turn Off Swap Files ==============

set noswapfile
set nobackup
set nowb

" ================ Persistent Undo ==================

set undodir=~/.vim/undo/
set undofile
set undolevels=1000
set undoreload=10000

" ================ Indentation ======================

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab
filetype plugin on
filetype indent on
set list listchars=tab:\ \ ,trail:·  " Display tabs and trailing spaces visually
set nowrap       "Don't wrap lines
set linebreak    "Wrap lines at convenient points

" ================ Folds ============================

set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" ================ Completion =======================

set wildmode=list:longest,list:full
set complete=.,w,t
function! InsertTabWrapper()
    let col = col('.') - 1
    if !col || getline('.')[col - 1] !~ '\k'
        return "\<tab>"
    else
        return "\<c-p>"
    endif
endfunction
inoremap <Tab> <c-r>=InsertTabWrapper()<cr>

function! s:RemoveTrailingWhitespaces()
  "Save last cursor position
  let l = line(".")
  let c = col(".")

  %s/\s\+$//ge

  call cursor(l,c)
endfunction

" ================ Scrolling ========================

set scrolloff=8         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

" ================ Search ===========================

set incsearch       " Find the next match as we type the search
set hlsearch        " Highlight searches by default
set ignorecase      " Ignore case when searching...
set smartcase       " ...unless we type a capital

if executable('ag')
  " Use Ag over Grep
  set grepprg=ag\ --nogroup
  let g:grep_cmd_opts = '--line-numbers --noheading'

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" ================ Get Off My Lawn ===========================
"
 nnoremap <Left> :echoe "Use h"<CR>
 nnoremap <Right> :echoe "Use l"<CR>
 nnoremap <Up> :echoe "Use k"<CR>
 nnoremap <Down> :echoe "Use j"<CR>

" ============== Plug Ins ==================


" ============== Number ==================
set number
set numberwidth=5

" ============== Snippets ==================

 let g:snippetsEmu_key = "<S-Tab>""

" ============== Nerdtree ==================

map <F10> :NERDTreeToggle<CR>
" Current file in nerdtree
map <F9> :NERDTreeFind<CR>
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let g:NERDTreeWinSize = 30


